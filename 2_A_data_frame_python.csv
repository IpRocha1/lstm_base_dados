judgeId,problemId,sourceCode
8240200,ALDS1_1_A,"def insert(N,A):
    x = map(str,A)
    print("" "".join(x))
    for i in range(1,N):
        v = A[i]
        j = i-1
        while j >= 0 and A[j] > v:
            A[j+1] = A[j]
            j -= 1
        A[j+1] = v
        y = map(str,A)
        print("" "".join(y))
    return A
    
n = int(input())
A = list(map(int,input().split()))
z = insert(n,A)
"
8246017,ALDS1_1_A,"N = int(input())
A = list(map(int, input().split()))

for n in range(N):
    B = sorted(A[:n+1]) + A[n+1:]
    print(*B)
    A = B
"
8246655,ALDS1_1_A,"N = int(input())
L = input()
print(L)
L = list(map(int,L.split()))

for i in range(1,N):
    v = L[i]
    j = i - 1
    while j >= 0 and L[j] > v:
        L[j+1] = L[j]
        j -= 1
    L[j+1] = v
    print(' '.join(list(map(str,L))))
    
"
8253993,ALDS1_1_A,"n = int(input())
a = list(map(int, input().split()))

for i in range(1, n):
  print(*a)
  v = a[i]
  j = i-1
  while j>=0 and a[j]>v:
    a[j+1] = a[j]
    j -= 1
  a[j+1] = v
print(*a)
"
8255239,ALDS1_1_A,"N = int(input())
A = list(map(int, input().split()))

for i in range(N):
    v = A[i]
    j = i - 1
    while j >= 0 and A[j] > v:
        A[j + 1] = A[j]
        j -= 1
    A[j + 1] = v
    for k in range(N):
        if k == N - 1:
            print(A[k])
        else:
            print(A[k], end = ' ')
"
8255553,ALDS1_1_A,"num=int(input())
num_list=list(map(int,input().split("" "")))


# for i in range(1,num):
#     v=num_list[i]
#     j=i-1
#     #vの手前がvより小さかったら交換
#     while j>=0 and num_list[j]<v:
#         num_list[j+1]=num_list[j]
#         j-=1
#         num_list[j+1]=v
#         print(num_list)

        
for i in range(1,num):
    v=num_list[i]
    j=i-1
    print(*num_list,sep =' ')
    #jは入れ替えの対象となる左側
    while j>=0 and num_list[j]>v:
        num_list[j+1]=num_list[j]
        num_list[j]=v
        j-=1
    
print(*num_list,sep =' ')
"
8270645,ALDS1_1_A,"def insertion_sort(arr):
    for i in range(1, len(arr)):
        key = arr[i]
        j = i - 1
        while j >= 0 and arr[j] > key:
            arr[j + 1] = arr[j]
            j -= 1
        arr[j + 1] = key
        print("" "".join(map(str, arr)))

# Read input
N = int(input())
sequence = list(map(int, input().split()))

# Initial sequence
print("" "".join(map(str, sequence)))

# Perform Insertion Sort
insertion_sort(sequence)

"
8272986,ALDS1_1_A,"n = int(input())
data = [int(s) for s in input().split()]
print(*data)
for i in range(1, n):
    for j in range(1, i + 1):
        if data[i-j+1] < data[i-j]:
            data[i-j], data[i-j+1] = data[i-j+1], data[i-j]
        else:
            break
    print(*data)
"
8290047,ALDS1_1_A,"N=eval(input())
l=list(map(int,input().split()))
print(*l)
for n in range(1,N):
    v=l[n]
    m=n-1
    while m>=0 and l[m]>v:
        l[m+1]=l[m]
        m=m-1
    l[m+1]=v
    print("" "".join(map(str,l)))
"
8291098,ALDS1_1_A,"N = int(input())
A = list(map(int, input().split()))

for i in range(N):
    v = A[i]
    j = i-1
    while j >= 0 and A[j] > v :
        A[j+1] = A[j]
        j = j-1
    A[j+1] = v
    print("" "".join(map(str,A)))
"
8292891,ALDS1_1_A,"def sort_list(unsorted_list:list, sort_revel:int) -> list:
    """"""{sort_level}回だけsortした配列を返す

    Args:
        unsorted_list (list): 入力配列
        sort_revel (int):ソートする回数

    Returns:
        list: ソートされた配列
    """"""
    for count in range(sort_revel):
        while((unsorted_list[count] > unsorted_list[count+1]) and count >= 0):
            tmp = unsorted_list[count]
            unsorted_list[count] = unsorted_list[count+1]
            unsorted_list[count+1] = tmp
            count -= 1
    sorted_list = unsorted_list

    return sorted_list

def make_input_list(query_count:int) -> list:
    """"""入力から長さ{query_count}の配列を返す

    Args:
        query_count (int): 配列の長さ

    Returns:
        list: 入力された配列
    """"""
    input_list:list = []
    input_str = input()
    for i in range(query_count):
        input_list.append(int(input_str.split("" "")[i]))

    return input_list

def make_sorted_list_collection(input_list:list, query_count:int) -> list:
    """"""0回~{query_count}回ソートした配列を格納した配列を返す

    Args:
        input_list (list): 入力された配列
        query_count (int): 配列の長さ

    Returns:
        list: ソートした配列を格納した配列
    """"""
    sorted_list_collection:list = []
    for i in range(query_count):
        sorted_list:list = sort_list(input_list, i)
        sorted_list_collection.append(sorted_list.copy())

    return sorted_list_collection

def print_list_collection(list_collection:list) -> None:
    """"""配列を格納した配列から、I行ずつ配列を表示する

    Args:
        list_collection (list): 表示する配列を格納した配列
    """"""
    for list in list_collection:
        print_str = ''
        length = len(list)
        for i in range(length):
            if (i == length - 1):
                print_str += f'{list[i]}'
            else:
                print_str += f'{list[i]} '
        print(print_str)
        
query_count = int(input())
input_list_collection = make_input_list(query_count)
sorted_list_collection = make_sorted_list_collection(input_list_collection, query_count)
print_list_collection(sorted_list_collection)
"
8294819,ALDS1_1_A,"n = int(input()) 
numbers = list(map(int, input().split()))  # 空白区切りの数字を読み込んでリストに変換

def insertion_sort(list, n):
    print("" "".join(map(str, list)))
    for i in range(1, n):
        v = list[i]
        j = i - 1
        while j >= 0 and list[j] > v:
            list[j+1] = list[j]
            j -= 1
        list[j+1] = v
        print("" "".join(map(str, list)))

insertion_sort(numbers, n)
"
8295303,ALDS1_1_A,"n = int(input())
A = list(map(int, input().split()))

for i in range(n):
    v = A[i]
    j = i - 1
    while j >= 0 and A[j] > v:
        A[j+1] = A[j]
        j -= 1
    A[j+1] = v
    for k in range(n):
        if k < n-1:
            print(f""{A[k]} "", end="""")
        else:
            print(A[k])
"
8317392,ALDS1_1_A,"a = input()
a = input().split(' ')
print(' '.join(a))

for i in range(1, len(a)):
    for j in range(i - 1, -1, -1):
        if int(a[i]) > int(a[j]):
            a.insert(j + 1, a.pop(i))
            break
    else:
        a.insert(0, a.pop(i))

    print(' '.join(a))
"
8338685,ALDS1_1_A,"def insertion_sort(n,A):
    print(*A)
    for i in range(1,n):
       v = A[i]
       j = i - 1
       while j >= 0 and A[j] > v:
            A[j+1] = A[j]
            j -= 1
            A[j+1] = v
       print(*A)

n = int(input())
A = list(map(int, input().split()))
insertion_sort(n,A)

"
8338785,ALDS1_1_A,"def insertionSort(a,n):
    for i in range(n):
        v=a[i]
        j=i-1
        while j>=0 and a[j]>v:
            a[j+1]=a[j]
            j=j-1
        a[j+1]=v
        for i in range(len(a)):
            if i==len(a)-1:
                print(a[i],end="""")
            else:
                print(a[i],end="" "")
        print()

n=int(input())
a=list(map(int,input().split()))
insertionSort(a,n)
"
8338849,ALDS1_1_A,"N = int(input())
A = list(map(int, input().split()))

print(*A)

for i in range(1, len(A)):
    v = A[i]
    j = i - 1
    while j >= 0 and A[j] > v:
        A[j + 1] = A[j]
        j -= 1
    A[j + 1] = v
    print(*A)
"
8341864,ALDS1_1_A,"N=int(input())
A=list(map(int,input().split()))
def insertionSort(A, N):
    for i in range(N):
        v=A[i]
        j=i-1
        while j>=0 and A[j]>v:
            A[j+1]=A[j]
            j-=1
        A[j+1]=v
        print(*A) 
insertionSort(A, N)
"
8348192,ALDS1_1_A,"def print_array(A: list):
    for i in range(len(A)):
        if i == (len(A) - 1):
            print(A[i])
        else:
            print(A[i], end="" "")


def main():
    N = int(input())

    A = list(map(int, input().split()))
    print_array(A)

    for i in range(1, N):
        v = A[i]
        j = i - 1
        while j >= 0 and A[j] > v:
            A[j + 1] = A[j]
            j -= 1
        A[j + 1] = v
        print_array(A)


if __name__ == ""__main__"":
    main()

"
8349318,ALDS1_1_A,"def insertionSort(A, N):
    print(*A)
    for i in range(1, N):
        v = A[i]
        j = i -1
        while j >= 0 and A[j] > v:
            A[j + 1] = A[j]
            j -= 1
        A[j + 1] = v
        print(*A)

N = int(input())

A = list(map(int, input().split()))

insertionSort(A, N)
"
8351830,ALDS1_1_A,"n = int(input())
a = list(map(int, input().split()))

for i in range(n):
    j = i - 1
    while j >= 0 and a[j] > a[j + 1]:
        a[j], a[j + 1] = a[j + 1], a[j]
        j -= 1

    print("" "".join(map(str, a)))

"
8367862,ALDS1_1_A,"def my_insertionSort(A, N):
    print(*A)
    for i in range(1,N):
        v = A[i]
        j = i - 1
        while j >= 0 and A[j] > v: #挿入したい要素より大きい要素は配列の後ろに送る
            A[j+1] = A[j]
            j -= 1
        A[j+1] = v
        print(*A)


n = int(input())
a = list(map(int, input().split()))
my_insertionSort(a, n)
"
8369075,ALDS1_1_A,"N = int(input())
lst = list(map(int, input().split()))
for k in range(N):
    if k != N-1:
      print(lst[k],end="" "")
    else:
      print(lst[k])

for i in range(N-1):
  v = lst[i+1]
  j = i-1
  while lst[j+1] > v and j+1 >= 0:
    lst[j+2] = lst[j+1]
    j -= 1
  lst[j+2] = v
  for k in range(N):
    if k != N-1:
      print(lst[k],end="" "")
    else:
      print(lst[k])
"
8381629,ALDS1_1_A,"def insertionSort(A,N):
    for i in range(N):
        v = A[i]
        j = i - 1
        while j >= 0 and A[j] > v:
            A[j+1] = A[j]
            j -= 1
        A[j+1] = v

        for j in range(N):
          if j != N-1:
            print(A[j], end = ' ')
          else:
            print(A[j])

        
N = int(input())

A = list(map(int, input().split()))

insertionSort(A,N)
"
8389211,ALDS1_1_A,"n = int(input())
a = list(map(int, input().split()))

for i in range(0, n):
    v =a[i]
    j = i -1
    while j>=0 and a[j] > v:
        a[j+1] = a[j]
        j -= 1
        a[j+1] = v
    print(*a)
    
"
8401601,ALDS1_1_A,"def insert_sort(A, N):
    for i in range(1,N):
        v = A[i]
        j = i -1
        while j >= 0 and A[j] > v:
            A[j+1] = A[j]
            j-=1
        A[j+1] = v
        print(' '.join(map(str, A)))
    return A
N = int(input())
A = list(map(int, input().split()))
print(' '.join(map(str, A)))
insert_sort(A, len(A))
"
8413484,ALDS1_1_A,"N=int(input())
A=list(map(int, input().split()))

#print(N, A)

for i in range(N):
    v=A[i]
    j=i-1
    while j>=0 and A[j]>v:
        A[j+1]=A[j]
        j-=1
    A[j+1]=v
    print(*A)
"
8414547,ALDS1_1_A,"n = int(input())
A = list(map(int, input().split()))
for i in range(n):
    v = A[i]
    j = i - 1
    while j >= 0 and A[j] > v:
        A[j+1] = A[j]
        j -= 1
    A[j+1] = v
    print(*A)
"
8416530,ALDS1_1_A,"def insertionSort(A, N):
    for i in range(1, N):
        v = A[i]
        j = i-1
        while j >= 0 and A[j] >v:
            A[j+1] = A[j]
            j -= 1
        A[j + 1] = v
        print(*A)
    return A

N = int(input())
A =[int(j) for j in input().split()]

print(*A)

insertionSort(A, N)

"
8421670,ALDS1_1_A,"N = int(input())
A = [*map(int, input().split())]

for i in range(N):
    v = A[i]
    j = i-1
    while j >= 0 and A[j] > v:
        A[j+1] = A[j]
        j -= 1
    A[j+1] = v
    print(*A)
"
8426894,ALDS1_1_A,"def insertionSort(a, n):
    for i in range(1,n):
        v = a[i]
        j = i-1
        while j >= 0 and a[j] > v:
            a[j+1] = a[j]
            j -= 1
        a[j+1] = v
        print(' '.join(list(map(str, a))))


n = int(input())
a = list(map(int, input().split()))
print(' '.join(list(map(str, a))))
insertionSort(a, n)
"
8429077,ALDS1_1_A,"import sys

input = sys.stdin.readline

def print_list(array):
    print("" "".join(map(str, array)))

def insertion_sort(n, array):
    print_list(array)
    for i in range(1, n):
        temp = array[i]
        j = i - 1
        while j >= 0 and array[j] > temp:
            array[j + 1] = array[j]
            j -= 1
        
        array[j + 1] = temp
        print_list(array)

def main():
    n = int(input())
    array = list(map(int, input().split()))
    
    insertion_sort(n, array)

if __name__ == ""__main__"":
    main()
"
8435038,ALDS1_1_A,"n = int(input())

a = list(map(int,input().split()))

for i in range(n):
    v = a[i]
    j = i -1
    while j >= 0 and a[j] > v:
        a[j + 1] = a[j]
        j -=1
        
    a[j+1] = v
        
    print(*a)
    
"
8442718,ALDS1_1_A,"def insertion_sort(arr, n):
    for i in range(n):
        v = arr[i]
        j = i - 1
        while j >= 0 and arr[j] > v:
            arr[j + 1] = arr[j]
            j -= 1
        arr[j + 1] = v
        print(' '.join(map(str, arr)))

n = int(input().strip())
arr = list(map(int, input().strip().split()))
insertion_sort(arr, n)

"
8446596,ALDS1_1_A,"def insertionSort(A, N): #N個の要素を含む0-オリジンの配列A
    for i in range(1,N):
        v = A[i]
        j = i -1
        while j >=0 and A[j] > v:
            A[j+1] = A[j]
            j -= 1
        A[j+1] = v
        print(*A)
    return A
    

N = int(input()) #配列の要素数
A = list(map(int, input().split())) #配列の要素
print(*A)
sort_A = insertionSort(A,N)
"
8456553,ALDS1_1_A,"n = int(input())
A = list(map(int,input().split()))
for i in range(n):
    j=i
    while j>0 and A[j-1]>A[j]:
        A[j],A[j-1]=A[j-1],A[j]
        j-=1
    print(*A)
        
"
8461928,ALDS1_1_A,"def printArr(intArr):
    n = len(intArr)
    s = """"

    for k in range(0,n):
        if k < n-1:
            s += str(intArr[k]) + "" ""
        else:
            s += str(intArr[k])

    print(s)

n = int(input())
strArr = input().split()
intArr = [int(s) for s in strArr]

printArr(intArr)

for i in range(1,n):
    v = intArr[i]
    j = i - 1
    while j >= 0 and intArr[j] > v:
        intArr[j+1] = intArr[j]
        j -= 1

    intArr[j+1] = v
    printArr(intArr)


"
8463754,ALDS1_1_A,"n = int(input())
a = list(map(int, input().split()))
for i in range(n):
    a = sorted(a[:i+1])+a[i+1:]
    print(*a)
"
8464407,ALDS1_1_A,"import math as ma

N = int(input())

A = list( map( int,input().split() ) )

for i in range(N):

    v = A[i]
    j = i - 1

    while (j >= 0) & (A[j] > v):

        A[j+1] = A[j]
        j-=1

    A[j+1] = v

    print(*A)
"
8475596,ALDS1_1_A,"def insertion_sort(A,n):
    for i in range(1,n):
        print(*A)
        v=A[i]
        j=i-1
        while j>=0 and A[j]>v:
            A[j+1]=A[j]
            j-=1
        A[j+1]=v


n=int(input())
A=[int(i) for i in input().split()]
insertion_sort(A,n)
print(*A)
'''
python .\Insertion_sort.py
6
5 2 4 6 1 3

2 5 4 6 1 3
2 4 5 6 1 3
2 4 5 6 1 3
1 2 4 5 6 3
1 2 3 4 5 6
'''
"
8484667,ALDS1_1_A,"N = int(input())
A = input().split()

for i in A:
    if i != A[len(A)-1]:    
        print(i,end="" "")
    else:
        print(i)

for i in range(1,len(A)):
    key = int(A[i])
    j = i-1
    while j >= 0 and int(A[j]) > key:
        A[j+1] = A[j]
        j -= 1
    A[j+1] = key
    for j in A:
        if j != A[len(A)-1]:    
            print(j,end="" "")
        else:
            print(j)
    
"
8490148,ALDS1_1_A,"num = int(input())
a = list(map(int, input().split()))

for i in range(num ):
    key = a[i]
    j = i - 1
    while j >= 0 and a[j] > key:
       # print(j)
        a[j+1] = a[j]
        j = j-1
    a[j+1] = key
    for i in range(num):
        if i != num-1:print(a[i], end=' ')
        else:print(a[i])

"
8507623,ALDS1_1_A,"N = int(input())
A = [*map(int, input().split())]
for i in range(N):
    v = A[i]
    j = i - 1
    while j >= 0 and  A[j] > v:
       A[j+1] = A[j]
       j -= 1
    A[j+1] = v
    print(*A)

    
"
8508392,ALDS1_1_A,"N = int(input())
A = list(map(int, input().split()))

print("" "".join(map(str, A)))  # 配列の初期状態を出力
for i in range(1, N):
    v = A[i]
    j = i - 1
    while j >= 0 and A[j] > v:
        A[j + 1] = A[j]
        j -= 1
    A[j + 1] = v
    print("" "".join(map(str, A)))  # 各ステップでの配列の状態を出力

"
8510503,ALDS1_1_A,"count = int(input())
card = list(map(int,input().split()))
for i in range(0,count) :
    v = card[i]
    j = i - 1
    while j >= 0 and card[j] > v :
        card[j + 1] = card[j]
        j -= 1
    card[j + 1] = v
    print("" "".join(map(str,card)))

"
8519983,ALDS1_1_A,"cnt = int(input())
ten = []
ten = list(map(int, input().split()))
for n in range(cnt-1):
      print(ten[n],end="" "")
print(ten[cnt-1])

for n in range(1,cnt,1):
    tmp = ten[n]
    m = n -1
    while (m >=0 and ten[m] > tmp):
        ten[m+1] = ten[m]
        m = m - 1
    ten[m+1] = tmp
    for n in range(cnt-1):
      print(ten[n],end="" "")
    print(ten[cnt-1])
"
8527905,ALDS1_1_A,"def show_list(A):
    for i, num in enumerate(A):
        if i != len(A)-1:
            print(num, end="" "")
        else:
            print(num)


def insertionSort(A, N):
    show_list(A)
    for i in range(1, N):
        tmp = A[i]
        j = i - 1
        while (j >= 0) and (A[j] > tmp):
            A[j+1] = A[j]
            j -= 1
        A[j+1] = tmp
        show_list(A)

N = int(input())
A = list(map(int, input().split()))
insertionSort(A, N)
"
8532599,ALDS1_1_A,"def insertion_sort(A, N):
    for i in range(N):
        v = A[i]
        j = i - 1
        while j >= 0 and A[j] > v:
            A[j+1] = A[j]
            j -= 1
        A[j+1] = v
        print(' '.join(list(map(str, A))))

def main():
    N = int(input())
    A = list(map(int, input().split(' '))) 

    insertion_sort(A, N)

if __name__ == '__main__':
    main()
"
8550539,ALDS1_1_A,"#!/usr/bin/python

def print_array(in_list: list):
    for i in range(len(in_list)):
        if i < len(in_list) - 1:
            sep = "" ""
        else:
            sep = ""\n""
        print(in_list[i], end=sep)

    return()


if __name__ == ""__main__"":
    import sys

    prompt_1 = ""input number of array elements: ""
    prompt_2 = ""input integers to fill in each elements: ""

    N = int(input().strip())
    A = list(map(int, input().strip().split()))

    print_array(A)

    for i in range(1, N):
        v = A[i]
        j = i - 1
        while j >= 0 and A[j] > v:
            A[j+1] = A[j]
            j -= 1
        A[j+1] = v
        print_array(A)

    sys.exit()

"
8561658,ALDS1_1_A,"N = int(input())
a_list = list(map(int, input().split()))

print(*a_list)
for i in range(1, N):
    a = a_list[i]
    j = i - 1
    while j >= 0 and a_list[j] > a:
        a_list[j + 1] = a_list[j]
        j = j - 1
    a_list[j + 1] = a
    print(*a_list)

"
8569745,ALDS1_1_A,"def print_moji(seq):
  for i in range(len(seq)):
    if i!=len(seq)-1:
      print(seq[i], end=' ')
    else:
      print(seq[i])

N=int(input())
s=list(input().split())
for i in range(len(s)):
  s[i]=int(s[i])
print_moji(s)
for i in range(1,len(s)):
  v=s[i]
  j=i-1
  while s[j]>v and j>=0:
    s[j+1]=s[j]
    j-=1
  s[j+1]=v
  print_moji(s)



"
8570505,ALDS1_1_A,"n = int(input())
nums = list(map(int, input().split()))

for i in range(n):
    j = 0

    while(i > j):
        if(nums[j] > nums[i]):
            nums.insert(j, nums[i])
            del nums[i + 1]

            break

        j += 1

    print(*nums)
"
8240200,ALDS1_1_A,"def insert(N,A):
    x = map(str,A)
    print("" "".join(x))
    for i in range(1,N):
        v = A[i]
        j = i-1
        while j >= 0 and A[j] > v:
            A[j+1] = A[j]
            j -= 1
        A[j+1] = v
        y = map(str,A)
        print("" "".join(y))
    return A
    
n = int(input())
A = list(map(int,input().split()))
z = insert(n,A)
"
8246017,ALDS1_1_A,"N = int(input())
A = list(map(int, input().split()))

for n in range(N):
    B = sorted(A[:n+1]) + A[n+1:]
    print(*B)
    A = B
"
8246655,ALDS1_1_A,"N = int(input())
L = input()
print(L)
L = list(map(int,L.split()))

for i in range(1,N):
    v = L[i]
    j = i - 1
    while j >= 0 and L[j] > v:
        L[j+1] = L[j]
        j -= 1
    L[j+1] = v
    print(' '.join(list(map(str,L))))
    
"
8253993,ALDS1_1_A,"n = int(input())
a = list(map(int, input().split()))

for i in range(1, n):
  print(*a)
  v = a[i]
  j = i-1
  while j>=0 and a[j]>v:
    a[j+1] = a[j]
    j -= 1
  a[j+1] = v
print(*a)
"
8255239,ALDS1_1_A,"N = int(input())
A = list(map(int, input().split()))

for i in range(N):
    v = A[i]
    j = i - 1
    while j >= 0 and A[j] > v:
        A[j + 1] = A[j]
        j -= 1
    A[j + 1] = v
    for k in range(N):
        if k == N - 1:
            print(A[k])
        else:
            print(A[k], end = ' ')
"
8255553,ALDS1_1_A,"num=int(input())
num_list=list(map(int,input().split("" "")))


# for i in range(1,num):
#     v=num_list[i]
#     j=i-1
#     #vの手前がvより小さかったら交換
#     while j>=0 and num_list[j]<v:
#         num_list[j+1]=num_list[j]
#         j-=1
#         num_list[j+1]=v
#         print(num_list)

        
for i in range(1,num):
    v=num_list[i]
    j=i-1
    print(*num_list,sep =' ')
    #jは入れ替えの対象となる左側
    while j>=0 and num_list[j]>v:
        num_list[j+1]=num_list[j]
        num_list[j]=v
        j-=1
    
print(*num_list,sep =' ')
"
8270645,ALDS1_1_A,"def insertion_sort(arr):
    for i in range(1, len(arr)):
        key = arr[i]
        j = i - 1
        while j >= 0 and arr[j] > key:
            arr[j + 1] = arr[j]
            j -= 1
        arr[j + 1] = key
        print("" "".join(map(str, arr)))

# Read input
N = int(input())
sequence = list(map(int, input().split()))

# Initial sequence
print("" "".join(map(str, sequence)))

# Perform Insertion Sort
insertion_sort(sequence)

"
8272986,ALDS1_1_A,"n = int(input())
data = [int(s) for s in input().split()]
print(*data)
for i in range(1, n):
    for j in range(1, i + 1):
        if data[i-j+1] < data[i-j]:
            data[i-j], data[i-j+1] = data[i-j+1], data[i-j]
        else:
            break
    print(*data)
"
8290047,ALDS1_1_A,"N=eval(input())
l=list(map(int,input().split()))
print(*l)
for n in range(1,N):
    v=l[n]
    m=n-1
    while m>=0 and l[m]>v:
        l[m+1]=l[m]
        m=m-1
    l[m+1]=v
    print("" "".join(map(str,l)))
"
8291098,ALDS1_1_A,"N = int(input())
A = list(map(int, input().split()))

for i in range(N):
    v = A[i]
    j = i-1
    while j >= 0 and A[j] > v :
        A[j+1] = A[j]
        j = j-1
    A[j+1] = v
    print("" "".join(map(str,A)))
"
8292891,ALDS1_1_A,"def sort_list(unsorted_list:list, sort_revel:int) -> list:
    """"""{sort_level}回だけsortした配列を返す

    Args:
        unsorted_list (list): 入力配列
        sort_revel (int):ソートする回数

    Returns:
        list: ソートされた配列
    """"""
    for count in range(sort_revel):
        while((unsorted_list[count] > unsorted_list[count+1]) and count >= 0):
            tmp = unsorted_list[count]
            unsorted_list[count] = unsorted_list[count+1]
            unsorted_list[count+1] = tmp
            count -= 1
    sorted_list = unsorted_list

    return sorted_list

def make_input_list(query_count:int) -> list:
    """"""入力から長さ{query_count}の配列を返す

    Args:
        query_count (int): 配列の長さ

    Returns:
        list: 入力された配列
    """"""
    input_list:list = []
    input_str = input()
    for i in range(query_count):
        input_list.append(int(input_str.split("" "")[i]))

    return input_list

def make_sorted_list_collection(input_list:list, query_count:int) -> list:
    """"""0回~{query_count}回ソートした配列を格納した配列を返す

    Args:
        input_list (list): 入力された配列
        query_count (int): 配列の長さ

    Returns:
        list: ソートした配列を格納した配列
    """"""
    sorted_list_collection:list = []
    for i in range(query_count):
        sorted_list:list = sort_list(input_list, i)
        sorted_list_collection.append(sorted_list.copy())

    return sorted_list_collection

def print_list_collection(list_collection:list) -> None:
    """"""配列を格納した配列から、I行ずつ配列を表示する

    Args:
        list_collection (list): 表示する配列を格納した配列
    """"""
    for list in list_collection:
        print_str = ''
        length = len(list)
        for i in range(length):
            if (i == length - 1):
                print_str += f'{list[i]}'
            else:
                print_str += f'{list[i]} '
        print(print_str)
        
query_count = int(input())
input_list_collection = make_input_list(query_count)
sorted_list_collection = make_sorted_list_collection(input_list_collection, query_count)
print_list_collection(sorted_list_collection)
"
8294819,ALDS1_1_A,"n = int(input()) 
numbers = list(map(int, input().split()))  # 空白区切りの数字を読み込んでリストに変換

def insertion_sort(list, n):
    print("" "".join(map(str, list)))
    for i in range(1, n):
        v = list[i]
        j = i - 1
        while j >= 0 and list[j] > v:
            list[j+1] = list[j]
            j -= 1
        list[j+1] = v
        print("" "".join(map(str, list)))

insertion_sort(numbers, n)
"
8295303,ALDS1_1_A,"n = int(input())
A = list(map(int, input().split()))

for i in range(n):
    v = A[i]
    j = i - 1
    while j >= 0 and A[j] > v:
        A[j+1] = A[j]
        j -= 1
    A[j+1] = v
    for k in range(n):
        if k < n-1:
            print(f""{A[k]} "", end="""")
        else:
            print(A[k])
"
8317392,ALDS1_1_A,"a = input()
a = input().split(' ')
print(' '.join(a))

for i in range(1, len(a)):
    for j in range(i - 1, -1, -1):
        if int(a[i]) > int(a[j]):
            a.insert(j + 1, a.pop(i))
            break
    else:
        a.insert(0, a.pop(i))

    print(' '.join(a))
"
8338685,ALDS1_1_A,"def insertion_sort(n,A):
    print(*A)
    for i in range(1,n):
       v = A[i]
       j = i - 1
       while j >= 0 and A[j] > v:
            A[j+1] = A[j]
            j -= 1
            A[j+1] = v
       print(*A)

n = int(input())
A = list(map(int, input().split()))
insertion_sort(n,A)

"
8338785,ALDS1_1_A,"def insertionSort(a,n):
    for i in range(n):
        v=a[i]
        j=i-1
        while j>=0 and a[j]>v:
            a[j+1]=a[j]
            j=j-1
        a[j+1]=v
        for i in range(len(a)):
            if i==len(a)-1:
                print(a[i],end="""")
            else:
                print(a[i],end="" "")
        print()

n=int(input())
a=list(map(int,input().split()))
insertionSort(a,n)
"
8338849,ALDS1_1_A,"N = int(input())
A = list(map(int, input().split()))

print(*A)

for i in range(1, len(A)):
    v = A[i]
    j = i - 1
    while j >= 0 and A[j] > v:
        A[j + 1] = A[j]
        j -= 1
    A[j + 1] = v
    print(*A)
"
8341864,ALDS1_1_A,"N=int(input())
A=list(map(int,input().split()))
def insertionSort(A, N):
    for i in range(N):
        v=A[i]
        j=i-1
        while j>=0 and A[j]>v:
            A[j+1]=A[j]
            j-=1
        A[j+1]=v
        print(*A) 
insertionSort(A, N)
"
8348192,ALDS1_1_A,"def print_array(A: list):
    for i in range(len(A)):
        if i == (len(A) - 1):
            print(A[i])
        else:
            print(A[i], end="" "")


def main():
    N = int(input())

    A = list(map(int, input().split()))
    print_array(A)

    for i in range(1, N):
        v = A[i]
        j = i - 1
        while j >= 0 and A[j] > v:
            A[j + 1] = A[j]
            j -= 1
        A[j + 1] = v
        print_array(A)


if __name__ == ""__main__"":
    main()

"
8349318,ALDS1_1_A,"def insertionSort(A, N):
    print(*A)
    for i in range(1, N):
        v = A[i]
        j = i -1
        while j >= 0 and A[j] > v:
            A[j + 1] = A[j]
            j -= 1
        A[j + 1] = v
        print(*A)

N = int(input())

A = list(map(int, input().split()))

insertionSort(A, N)
"
8351830,ALDS1_1_A,"n = int(input())
a = list(map(int, input().split()))

for i in range(n):
    j = i - 1
    while j >= 0 and a[j] > a[j + 1]:
        a[j], a[j + 1] = a[j + 1], a[j]
        j -= 1

    print("" "".join(map(str, a)))

"
8367862,ALDS1_1_A,"def my_insertionSort(A, N):
    print(*A)
    for i in range(1,N):
        v = A[i]
        j = i - 1
        while j >= 0 and A[j] > v: #挿入したい要素より大きい要素は配列の後ろに送る
            A[j+1] = A[j]
            j -= 1
        A[j+1] = v
        print(*A)


n = int(input())
a = list(map(int, input().split()))
my_insertionSort(a, n)
"
8369075,ALDS1_1_A,"N = int(input())
lst = list(map(int, input().split()))
for k in range(N):
    if k != N-1:
      print(lst[k],end="" "")
    else:
      print(lst[k])

for i in range(N-1):
  v = lst[i+1]
  j = i-1
  while lst[j+1] > v and j+1 >= 0:
    lst[j+2] = lst[j+1]
    j -= 1
  lst[j+2] = v
  for k in range(N):
    if k != N-1:
      print(lst[k],end="" "")
    else:
      print(lst[k])
"
8381629,ALDS1_1_A,"def insertionSort(A,N):
    for i in range(N):
        v = A[i]
        j = i - 1
        while j >= 0 and A[j] > v:
            A[j+1] = A[j]
            j -= 1
        A[j+1] = v

        for j in range(N):
          if j != N-1:
            print(A[j], end = ' ')
          else:
            print(A[j])

        
N = int(input())

A = list(map(int, input().split()))

insertionSort(A,N)
"
8389211,ALDS1_1_A,"n = int(input())
a = list(map(int, input().split()))

for i in range(0, n):
    v =a[i]
    j = i -1
    while j>=0 and a[j] > v:
        a[j+1] = a[j]
        j -= 1
        a[j+1] = v
    print(*a)
    
"
8401601,ALDS1_1_A,"def insert_sort(A, N):
    for i in range(1,N):
        v = A[i]
        j = i -1
        while j >= 0 and A[j] > v:
            A[j+1] = A[j]
            j-=1
        A[j+1] = v
        print(' '.join(map(str, A)))
    return A
N = int(input())
A = list(map(int, input().split()))
print(' '.join(map(str, A)))
insert_sort(A, len(A))
"
8413484,ALDS1_1_A,"N=int(input())
A=list(map(int, input().split()))

#print(N, A)

for i in range(N):
    v=A[i]
    j=i-1
    while j>=0 and A[j]>v:
        A[j+1]=A[j]
        j-=1
    A[j+1]=v
    print(*A)
"
8414547,ALDS1_1_A,"n = int(input())
A = list(map(int, input().split()))
for i in range(n):
    v = A[i]
    j = i - 1
    while j >= 0 and A[j] > v:
        A[j+1] = A[j]
        j -= 1
    A[j+1] = v
    print(*A)
"
8416530,ALDS1_1_A,"def insertionSort(A, N):
    for i in range(1, N):
        v = A[i]
        j = i-1
        while j >= 0 and A[j] >v:
            A[j+1] = A[j]
            j -= 1
        A[j + 1] = v
        print(*A)
    return A

N = int(input())
A =[int(j) for j in input().split()]

print(*A)

insertionSort(A, N)

"
8421670,ALDS1_1_A,"N = int(input())
A = [*map(int, input().split())]

for i in range(N):
    v = A[i]
    j = i-1
    while j >= 0 and A[j] > v:
        A[j+1] = A[j]
        j -= 1
    A[j+1] = v
    print(*A)
"
8426894,ALDS1_1_A,"def insertionSort(a, n):
    for i in range(1,n):
        v = a[i]
        j = i-1
        while j >= 0 and a[j] > v:
            a[j+1] = a[j]
            j -= 1
        a[j+1] = v
        print(' '.join(list(map(str, a))))


n = int(input())
a = list(map(int, input().split()))
print(' '.join(list(map(str, a))))
insertionSort(a, n)
"
8429077,ALDS1_1_A,"import sys

input = sys.stdin.readline

def print_list(array):
    print("" "".join(map(str, array)))

def insertion_sort(n, array):
    print_list(array)
    for i in range(1, n):
        temp = array[i]
        j = i - 1
        while j >= 0 and array[j] > temp:
            array[j + 1] = array[j]
            j -= 1
        
        array[j + 1] = temp
        print_list(array)

def main():
    n = int(input())
    array = list(map(int, input().split()))
    
    insertion_sort(n, array)

if __name__ == ""__main__"":
    main()
"
8435038,ALDS1_1_A,"n = int(input())

a = list(map(int,input().split()))

for i in range(n):
    v = a[i]
    j = i -1
    while j >= 0 and a[j] > v:
        a[j + 1] = a[j]
        j -=1
        
    a[j+1] = v
        
    print(*a)
    
"
8442718,ALDS1_1_A,"def insertion_sort(arr, n):
    for i in range(n):
        v = arr[i]
        j = i - 1
        while j >= 0 and arr[j] > v:
            arr[j + 1] = arr[j]
            j -= 1
        arr[j + 1] = v
        print(' '.join(map(str, arr)))

n = int(input().strip())
arr = list(map(int, input().strip().split()))
insertion_sort(arr, n)

"
8446596,ALDS1_1_A,"def insertionSort(A, N): #N個の要素を含む0-オリジンの配列A
    for i in range(1,N):
        v = A[i]
        j = i -1
        while j >=0 and A[j] > v:
            A[j+1] = A[j]
            j -= 1
        A[j+1] = v
        print(*A)
    return A
    

N = int(input()) #配列の要素数
A = list(map(int, input().split())) #配列の要素
print(*A)
sort_A = insertionSort(A,N)
"
8456553,ALDS1_1_A,"n = int(input())
A = list(map(int,input().split()))
for i in range(n):
    j=i
    while j>0 and A[j-1]>A[j]:
        A[j],A[j-1]=A[j-1],A[j]
        j-=1
    print(*A)
        
"
8461928,ALDS1_1_A,"def printArr(intArr):
    n = len(intArr)
    s = """"

    for k in range(0,n):
        if k < n-1:
            s += str(intArr[k]) + "" ""
        else:
            s += str(intArr[k])

    print(s)

n = int(input())
strArr = input().split()
intArr = [int(s) for s in strArr]

printArr(intArr)

for i in range(1,n):
    v = intArr[i]
    j = i - 1
    while j >= 0 and intArr[j] > v:
        intArr[j+1] = intArr[j]
        j -= 1

    intArr[j+1] = v
    printArr(intArr)


"
8463754,ALDS1_1_A,"n = int(input())
a = list(map(int, input().split()))
for i in range(n):
    a = sorted(a[:i+1])+a[i+1:]
    print(*a)
"
8464407,ALDS1_1_A,"import math as ma

N = int(input())

A = list( map( int,input().split() ) )

for i in range(N):

    v = A[i]
    j = i - 1

    while (j >= 0) & (A[j] > v):

        A[j+1] = A[j]
        j-=1

    A[j+1] = v

    print(*A)
"
8475596,ALDS1_1_A,"def insertion_sort(A,n):
    for i in range(1,n):
        print(*A)
        v=A[i]
        j=i-1
        while j>=0 and A[j]>v:
            A[j+1]=A[j]
            j-=1
        A[j+1]=v


n=int(input())
A=[int(i) for i in input().split()]
insertion_sort(A,n)
print(*A)
'''
python .\Insertion_sort.py
6
5 2 4 6 1 3

2 5 4 6 1 3
2 4 5 6 1 3
2 4 5 6 1 3
1 2 4 5 6 3
1 2 3 4 5 6
'''
"
8484667,ALDS1_1_A,"N = int(input())
A = input().split()

for i in A:
    if i != A[len(A)-1]:    
        print(i,end="" "")
    else:
        print(i)

for i in range(1,len(A)):
    key = int(A[i])
    j = i-1
    while j >= 0 and int(A[j]) > key:
        A[j+1] = A[j]
        j -= 1
    A[j+1] = key
    for j in A:
        if j != A[len(A)-1]:    
            print(j,end="" "")
        else:
            print(j)
    
"
8490148,ALDS1_1_A,"num = int(input())
a = list(map(int, input().split()))

for i in range(num ):
    key = a[i]
    j = i - 1
    while j >= 0 and a[j] > key:
       # print(j)
        a[j+1] = a[j]
        j = j-1
    a[j+1] = key
    for i in range(num):
        if i != num-1:print(a[i], end=' ')
        else:print(a[i])

"
8507623,ALDS1_1_A,"N = int(input())
A = [*map(int, input().split())]
for i in range(N):
    v = A[i]
    j = i - 1
    while j >= 0 and  A[j] > v:
       A[j+1] = A[j]
       j -= 1
    A[j+1] = v
    print(*A)

    
"
8508392,ALDS1_1_A,"N = int(input())
A = list(map(int, input().split()))

print("" "".join(map(str, A)))  # 配列の初期状態を出力
for i in range(1, N):
    v = A[i]
    j = i - 1
    while j >= 0 and A[j] > v:
        A[j + 1] = A[j]
        j -= 1
    A[j + 1] = v
    print("" "".join(map(str, A)))  # 各ステップでの配列の状態を出力

"
8510503,ALDS1_1_A,"count = int(input())
card = list(map(int,input().split()))
for i in range(0,count) :
    v = card[i]
    j = i - 1
    while j >= 0 and card[j] > v :
        card[j + 1] = card[j]
        j -= 1
    card[j + 1] = v
    print("" "".join(map(str,card)))

"
8519983,ALDS1_1_A,"cnt = int(input())
ten = []
ten = list(map(int, input().split()))
for n in range(cnt-1):
      print(ten[n],end="" "")
print(ten[cnt-1])

for n in range(1,cnt,1):
    tmp = ten[n]
    m = n -1
    while (m >=0 and ten[m] > tmp):
        ten[m+1] = ten[m]
        m = m - 1
    ten[m+1] = tmp
    for n in range(cnt-1):
      print(ten[n],end="" "")
    print(ten[cnt-1])
"
8527905,ALDS1_1_A,"def show_list(A):
    for i, num in enumerate(A):
        if i != len(A)-1:
            print(num, end="" "")
        else:
            print(num)


def insertionSort(A, N):
    show_list(A)
    for i in range(1, N):
        tmp = A[i]
        j = i - 1
        while (j >= 0) and (A[j] > tmp):
            A[j+1] = A[j]
            j -= 1
        A[j+1] = tmp
        show_list(A)

N = int(input())
A = list(map(int, input().split()))
insertionSort(A, N)
"
8532599,ALDS1_1_A,"def insertion_sort(A, N):
    for i in range(N):
        v = A[i]
        j = i - 1
        while j >= 0 and A[j] > v:
            A[j+1] = A[j]
            j -= 1
        A[j+1] = v
        print(' '.join(list(map(str, A))))

def main():
    N = int(input())
    A = list(map(int, input().split(' '))) 

    insertion_sort(A, N)

if __name__ == '__main__':
    main()
"
8550539,ALDS1_1_A,"#!/usr/bin/python

def print_array(in_list: list):
    for i in range(len(in_list)):
        if i < len(in_list) - 1:
            sep = "" ""
        else:
            sep = ""\n""
        print(in_list[i], end=sep)

    return()


if __name__ == ""__main__"":
    import sys

    prompt_1 = ""input number of array elements: ""
    prompt_2 = ""input integers to fill in each elements: ""

    N = int(input().strip())
    A = list(map(int, input().strip().split()))

    print_array(A)

    for i in range(1, N):
        v = A[i]
        j = i - 1
        while j >= 0 and A[j] > v:
            A[j+1] = A[j]
            j -= 1
        A[j+1] = v
        print_array(A)

    sys.exit()

"
8561658,ALDS1_1_A,"N = int(input())
a_list = list(map(int, input().split()))

print(*a_list)
for i in range(1, N):
    a = a_list[i]
    j = i - 1
    while j >= 0 and a_list[j] > a:
        a_list[j + 1] = a_list[j]
        j = j - 1
    a_list[j + 1] = a
    print(*a_list)

"
8569745,ALDS1_1_A,"def print_moji(seq):
  for i in range(len(seq)):
    if i!=len(seq)-1:
      print(seq[i], end=' ')
    else:
      print(seq[i])

N=int(input())
s=list(input().split())
for i in range(len(s)):
  s[i]=int(s[i])
print_moji(s)
for i in range(1,len(s)):
  v=s[i]
  j=i-1
  while s[j]>v and j>=0:
    s[j+1]=s[j]
    j-=1
  s[j+1]=v
  print_moji(s)



"
8570505,ALDS1_1_A,"n = int(input())
nums = list(map(int, input().split()))

for i in range(n):
    j = 0

    while(i > j):
        if(nums[j] > nums[i]):
            nums.insert(j, nums[i])
            del nums[i + 1]

            break

        j += 1

    print(*nums)
"
8243959,ALDS1_2_A,"N = int(input())
L = list(map(int,input().split()))
count = 0
for n in range(N):
    while n > 0 and L[n] < L[n-1]:
        L[n],L[n-1] = L[n-1],L[n]
        count += 1
        n -= 1

L = list(map(str,L))        
print(' '.join(L))
print(count)
        
"
8253620,ALDS1_2_A,"def bubblesort(n,A):
    v = 0
    a = 1
    while a != 0:
        a = 0
        for i in range(n-1):
            if A[i] > A[i+1]:
                x = A[i]
                A[i] = A[i+1]
                A[i+1] = x
                v += 1
                a += 1
            else :
                pass
    A = map(str,A)
    print("" "".join(A))
    print(v)

n = int(input())
A = list(map(int,input().split()))
bubblesort(n,A)
"
8255773,ALDS1_2_A,"num=int(input())
sort_list=list(map(int,input().split("" "")))
flag=True
i=0
s=0
while flag:
    flag=False
    #jは右側
    for j in range(num-1,i,-1):
        if sort_list[j]<sort_list[j-1]:
            sort_list[j],sort_list[j-1]=sort_list[j-1],sort_list[j]
            flag=True
            s+=1
    i+=1

print(*sort_list,sep=' ')
print(s)
"
8272407,ALDS1_2_A,"n = int(input())
data = [int(s) for s in input().split()]
count = 0
for i in range(n):
    for j in range(n - i - 1):
        if data[j+1] < data[j]:
            data[j], data[j+1] = data[j+1], data[j]
            count += 1
print(*data)
print(count)
"
8289535,ALDS1_2_A,"n = int(input())
l = list(map(int,input().split()))

cnt = 0
for i in range(n):
    for j in reversed(range(1, n)):
        if l[j] < l[j-1]:
            a = l[j-1]
            b = l[j]
            l[j-1] = b
            l[j] = a
            cnt += 1

print(*l)
print(cnt)
"
8296511,ALDS1_2_A,"n = int(input())
A = list(map(int, input().split()))

flag = 1
count = 0

while flag == 1:
    flag = 0
    for i in range(1, n):
        if A[i-1] > A[i]:
            A[i-1], A[i] = A[i], A[i-1]
            flag = 1
            count += 1

for j in range(n):
    if j < n-1:
        print(f""{A[j]} "", end="""")
    else:
        print(A[j])

print(count)
"
8327033,ALDS1_2_A,"n = int(input())
A = list(map(int, input().split()))
flag = 1
cnt = 0
while flag:
	flag = 0
	for i in range(n-1, 0, -1):
		if A[i]<A[i-1]:
			A[i], A[i-1] = A[i-1], A[i]
			cnt += 1
			flag = 1
print(*A); print(cnt)
"
8339111,ALDS1_2_A,"n = int(input())
numbers = list(map(int, input().split()))  # 空白区切りの数字を読み込んでリストに変換

def bubble_sort(list, n):
    count = 0
    flag = 1
    while flag:
        flag = 0
        for j in range(n-1, 0, -1):
            if list[j] < list[j-1]:
                list[j], list[j-1] = list[j-1], list[j]
                flag = 1
                count += 1
    print("" "".join(map(str, list)))
    print(count)

bubble_sort(numbers, n)
"
8340355,ALDS1_2_A,"def bubbleSort(A, n):
    cnt = 0
    flag = 1
    while flag:
        flag = 0
        for j in range(n-1,0,-1):
            if A[j] < A[j-1]:
                cnt += 1
                A[j],A[j-1] = A[j-1],A[j]
                flag = 1
    print(*A)
    print(cnt)

n = int(input())
A = list(map(int,input().split()))
bubbleSort(A,n)

"
8345209,ALDS1_2_A,"N=int(input())
A=list(map(int,input().split()))


def bubbleSort(B:list,X:int):
    change_count=0
    flag=1 #逆の隣接要素が存在する
    while flag:
        flag=0
        for j in range(N-1,0,-1):
            if(B[j]<B[j-1]):
                tmp=B[j]
                B[j]=B[j-1]
                B[j-1]=tmp
                flag=1
                change_count+=1
    
    return B,change_count

reA,count=bubbleSort(A,N)

# for i in range(N):
#     if(i<N-1):
#         print('{} '.format(reA[i]),end="""")
#     else:
#         print(reA[i])
output=' '.join(map(str,reA))
print(output)
print(count)
"
8348285,ALDS1_2_A,"def bubblesort(a,n):
    flag=1
    i=0
    count=0
    while flag:
        flag=0
        for j in range(n-1,i,-1):
            if a[j]<a[j-1]:
                temp=a[j-1]
                a[j-1]=a[j]
                a[j]=temp
                count+=1
                flag=1
        i+=1
    for k in range(len(a)):
        if k==len(a)-1:
            print(a[k])
        else:
            print(a[k],end="" "")            
    print(count)

n=int(input())
a=list(map(int,input().split()))
bubblesort(a,n)

"
8350820,ALDS1_2_A,"def bubble(A, n):
    count = 0
    for i in range(n):
        for j in range(n - 1):
            if A[j] > A[j + 1]:
                A[j], A[j + 1] = A[j + 1], A[j]
                count += 1
    print(*A)
    print(count)

n = int(input())
A = list(map(int, input().split()))
bubble(A, n)
"
8369946,ALDS1_2_A,"N = int(input())
A = list(map(int,input().split()))

def BubbleSort(N,A):
    flag = 1
    i = 0
    count = 0

    while flag:
        flag = 0
        for j in reversed(range(i+1,N)):#降順(大きい値から小さくなる順)
            if A[j] < A[j-1]:
                A[j],A[j-1] = A[j-1],A[j]
                flag = 1
                count += 1
        i+=1

    return count

count = BubbleSort(N,A)
print(*A)
print(count)
"
8387792,ALDS1_2_A,"N = int(input())
A = [*map(int, input().split())]

inv = 0
for i in range(N):
  for j in reversed(range(i+1, N)):
    if A[j] < A[j-1]:
      A[j-1], A[j] = A[j], A[j-1]
      inv += 1
print(*A)
print(inv)

"
8399263,ALDS1_2_A,"def bubbleSort(A,N):
    flag = True
    cnt = 0
    while flag:
        flag = False
        for j in range(N-1,0,-1):
            if A[j] < A[j-1]:
                temp = A[j]
                A[j] = A[j-1]
                A[j-1] = temp
                flag = True
                cnt += 1 
    return A,cnt
    
N = int(input())
A = list(map(int, input().split()))

A_sort, cnt = bubbleSort(A,N)

for i in range(N):
    if i != N-1:
        print(A[i], end = ' ')
    else:
        print(A[i])

print(cnt)
"
8402279,ALDS1_2_A,"n = int(input()) - 1
a = [int(s) for s in input().split()]
cnt = 0

for i in range(n):
    for j in range(n, i, -1):
        if a[j] < a[j - 1]:
            a[j], a[j - 1] = a[j - 1], a[j]
            cnt += 1

print(*a)
print(cnt)
"
8403987,ALDS1_2_A,"N = int(input()) # 要素数
x = [None] * N

s = input()
x0 = s.split(' ')
for i in range(N):
  x[i] = int(x0[i])

cnt = 0
flag = 1
while flag:
  flag = 0
  for j in range(N - 1, 0, -1):
    if x[j] < x[j - 1]:
      x[j], x[j - 1] = x[j - 1], x[j]
      flag = 1
      cnt += 1



for i in range(N):
  if i < N - 1:
    print(x[i], end = ' ')
  else:
    print(x[i])

print(cnt)
"
8404107,ALDS1_2_A,"def buble_sort(n, a):
    flag = True
    counter = 0

    while flag:
        flag = False
        for i in range(n-1, 0, -1):
            if a[i] < a[i - 1]:
                temp = a[i]
                a[i] = a[i - 1]
                a[i - 1] = temp
                flag = True
                counter += 1
    return(a, counter)

n = int(input())
a_init = list(map(int, input().split()))

a, counter = buble_sort(n, a_init)
print(*a)
print(counter)

"
8404381,ALDS1_2_A,"def bubbleSort(A, N): # N個の要素を含む 0-オリジンの配列 A
    flag = 1
    count = 0
    while flag:
        flag = 0
        for j in range(1, N):
            if A[j] < A[j-1]:
                a = A[j]
                A[j] = A[j-1]
                A[j-1] = a
                flag = 1
                count += 1
    return A, count
    
N = int(input())
A = [int(x) for x in input().split()]
A_sort, count = bubbleSort(A, N)
print(' '.join(map(str, A_sort)))
print(count)
"
8405475,ALDS1_2_A,"N = int(input()) #要素数
L = input().split(' ')
for i in range(N):
    L[i] = int(L[i])
    
flag = 1
cnt = 0
while flag:
    flag = 0
    for j in range(N-1,0,-1):
        if L[j] < L[j-1]:
            L[j], L[j-1] = L[j-1], L[j]
            flag = 1
            cnt += 1
            
s = ''
for i in range(len(L)):
    if(i == 0):
        s += str(L[i])
    else:
        s += (' ' + str(L[i]))
print(s)
print(cnt)
"
8407244,ALDS1_2_A,"def bubbleSort(array , n) -> int:
    swap_count = 0
    flag = 1
    while flag:
        flag = 0
        for j in range(n-1):
            if array[j] > array[j+1]:
                array[j], array[j+1] = array[j+1], array[j] #swap
                # tmp = array[j]
                # array[j] = array[j+1]
                # array[j+1] = tmp
                flag = 1
                swap_count += 1
    return swap_count

n = int(input())
array = list(map(int, input().split()))

swap_count = bubbleSort(array,n)
print(*array)
print(swap_count)
"
8422414,ALDS1_2_A,"# ALDS1_2_A
def bubble_sort(A,N):
    flag = 1
    cnt = 0 # 要素の交換が行われた回数
    while flag:
        flag = 0
        for j in range(N-1):
            j = N-1-j # 逆順なので j = N-1-j 
            if A[j] < A[j-1]:
                # A[j]とA[j-1]の交換
                tmp = A[j]
                A[j] = A[j-1]
                A[j-1] = tmp
                flag = 1
                cnt += 1
                
    return cnt
                
N = int(input())
A = list(map(int,input().split("" "")))

swap_cnt = bubble_sort(A,N)
print(*A)
print(swap_cnt)
"
8429111,ALDS1_2_A,"import sys

input = sys.stdin.readline

def print_list(array):
    print("" "".join(map(str, array)))




def bubble_sort(n, array):
    flag = 1
    count = 0
    while flag:
        flag = 0
        for j in reversed(range(1,n)):
            if array[j - 1] > array[j]:
                array[j], array[j-1] = array[j-1], array[j]
                count += 1
                flag = 1
    
    return count

def main():
    n = int(input())
    array = list(map(int, input().split()))
    
    count = bubble_sort(n, array)
    
    # sorted list
    print_list(array)
    
    # swap count
    print(count)
    

if __name__ == ""__main__"":
    main()
"
8447771,ALDS1_2_A,"def bubbleSort(A,N):
    
    n = 0
    for i in range(N):
        flag = 0
        for j in range(N-1, 0, -1):
            if A[j] < A[j-1]:
                a = A[j]
                b = A[j-1]
                A[j] = b
                A[j-1] = a
                flag = 1
                n += 1
        if flag == 0:
            break

    print(*A)
    print(n)

N = int(input())

A = list(map(int, input().split()))
bubbleSort(A,N)
"
8456833,ALDS1_2_A,"n = int(input())
a = []
a = list(map(int, input().split()))

flag = 1
change_count = 0
while flag:
    flag = 0
    for j in range(n - 1, 0, -1):
        if a[j] < a[j - 1]:
            tmp = a[j]
            a[j] = a[j - 1]
            a[j - 1] = tmp
            change_count += 1
            flag = 1

for i in range(n):
     if i != 0:
         print("" "",end="""")
     print(a[i], end="""")
print()
print(change_count)

"
8459245,ALDS1_2_A,"def bubble_sort(A,N):
    count = 0
    for i in range(1,N):
        j = i
        while j>0 and A[j-1]>A[j]:
            A[j-1],A[j] = A[j],A[j-1]
            j-=1
            count+=1
    print(*A)
    print(count)
n = int(input())
A = list(map(int,input().split()))
bubble_sort(A,n)
"
8464687,ALDS1_2_A,"n = int(input())
x = list( map( int , input().split() ) )

flag = 1
sum=0

while flag:
    flag = 0

    for j in range(n-1,0,-1):

        if x[j]<x[j-1]:
            x[j],x[j-1]=x[j-1],x[j]
            sum+=1
            flag = 1
        
    
print(*x)
print(sum)
"
8475802,ALDS1_2_A,"def bubble_sort(A,n):
    flag=1
    j=0
    sum=0
    while flag:
        flag=0
        for i in reversed(range(j+1,n)):
            if A[i]<A[i-1]:
                A[i],A[i-1]=A[i-1],A[i]
                flag=1
                sum+=1
        j+=1
    return sum

n=int(input())
L=[int(i) for i in input().split()]
sum=bubble_sort(L,n)
print(*L)
print(sum)
"
8483538,ALDS1_2_A,"def bubblesort(A,N):
    ans = 0
    for i in range (N):
        for j in range(N-1):
            if A[j+1]<A[j]:
                A[j],A[j+1]=A[j+1],A[j]
                ans+=1
    print(*A)
    print(ans)
N = int(input())
A = list(map(int,input().split()))
bubblesort(A,N)
"
8483551,ALDS1_2_A,"def bubblesort(A,N):
    ans = 0
    for i in range (N):
        for j in range(N-1):
            if A[j+1]<A[j]:
                A[j],A[j+1]=A[j+1],A[j]
                ans+=1
    print(*A)
    print(ans)
    
N = int(input())
A = list(map(int,input().split()))
bubblesort(A,N)
"
8486051,ALDS1_2_A,"def bubbleSort(A):
    N=len(A)
    count=0
    flag=True
    while flag:
        flag=False
        for j in reversed(range(1,N)):
            if A[j]<A[j-1]:
                A[j],A[j-1]=A[j-1],A[j]
                count+=1
                flag=True
    return count
    
N=int(input())
A=list(map(int,input().split()))
c=bubbleSort(A)
print(*A)
print(c)

"
8492146,ALDS1_2_A,"def swap(a, i, j):
    # list aのi番目の要素とj番目の要素を交換する関数
    k = a[j]
    a[j] = a[i]
    a[i] = k

def bubbleSort(a, n):
    sw = 0
    flag = 1
    while flag:
        flag = 0
        for j in range(n-1, 0, -1):
            if a[j] < a[j-1]:
                swap(a, j-1, j)
                flag = 1
                sw += 1
    print(' '.join(list(map(str,a))))
    print(sw)

n = int(input())
a = list(map(int, input().split()))
bubbleSort(a, n)
"
8508533,ALDS1_2_A,"N = int(input())
A = list(map(int, input().split()))

flag = 1
swap_count = 0  # 交換回数をカウントする変数

while flag:
    flag = 0
    for j in range(N-1, 0, -1):  # 最後から先頭に向かってループ
        if A[j] < A[j-1]:
            A[j], A[j-1] = A[j-1], A[j]
            swap_count += 1  # 交換が行われたのでカウントを増やす
            flag = 1

print("" "".join(map(str, A)))
print(swap_count)

"
8532856,ALDS1_2_A,"n = int(input())
l = list(map(int, input().split()))

a = 0
c = 0
while a < n:
    i = n - 1
    j = n - 2
    while j >= 0:
        if l[j] > l[i]:
            t = l[i]
            l[i] = l[j]
            l[j] = t
            c += 1
        i -= 1
        j -= 1
    a += 1

print(*l)
print(c)
"
8533554,ALDS1_2_A,"def show_list(A):
    for i, num in enumerate(A):
        if i != len(A)-1:
            print(num, end="" "")
        else:
            print(num)

def BubbleSort(N, l):
    ans = 0
    idx = 0  # 未ソート部分の先頭インデックス
    flag = True
    while flag:
        flag = False
        for i in range(N - 1, idx, -1):
            if l[i] < l[i - 1]:
                l[i - 1], l[i] = l[i], l[i - 1]
                ans += 1
                flag = True
        idx += 1
    show_list(l)
    print(ans)
N = int(input())
num_list = list(map(int, input().split()))
BubbleSort(N, num_list)
"
8533626,ALDS1_2_A,"def bubble_sort(A, N):
    flag = 1
    counter = 0
    while flag:
          flag = 0
          for j in range(N-1, 0, -1):
               if A[j] < A[j-1]:
                    counter += 1
                    dummy = A[j]
                    A[j] = A[j-1]
                    A[j-1] = dummy
                    flag = 1
    return A, counter 

def main():
      n = int(input())
      A = list(map(int, input().split(' ')))

      ans, count = bubble_sort(A, n)
      print(' '.join(list(map(str, ans))))
      print(count)


    

if __name__ == '__main__':
    main()
"
8561662,ALDS1_2_A,"N = int(input())
a_list = list(map(int, input().split()))

flag = True
count = 0
while flag:
    flag = False
    for i in range(N - 1, 0, -1):
        if a_list[i] < a_list[i - 1]:
            tmp = a_list[i]
            a_list[i] = a_list[i - 1]
            a_list[i - 1] = tmp
            flag = True
            count = count + 1

print(*a_list)
print(count)

"
8572864,ALDS1_2_A,"N=int(input())
s=list(input().split())
count=0
for i in range(N):
  s[i]=int(s[i])
flag=1
while flag:
  flag=0
  for i in range(N-1):
    if s[i]>s[i+1]:
      t=s[i]
      s[i]=s[i+1]
      s[i+1]=t
      flag=1
      count+=1
for i in range(N):
  if i!=N-1:
    print(s[i], end=' ')
  else:
    print(s[i])
print(count)

"
8573074,ALDS1_2_A,"N = int(input())
A = list(map(int, input().split()))

flag = 1
cnt = 0
while flag:
    flag = 0
    for j in range(N-1):
        j = N-1-j
        if A[j]<A[j-1]:
            tmp = A[j-1]
            A[j-1] = A[j]
            A[j] = tmp
            flag = 1
            cnt += 1
print(*A)
print(cnt)
"
8576573,ALDS1_2_A,"n = int(input())
lis = list(map(int, input().split()))
count = 0
for i in range(n-1):
    for j in range(n-1,i,-1):
        if lis[j] < lis[j-1]:
            lis[j-1], lis[j] = lis[j], lis[j-1]
            count += 1
print("" "".join(map(str,lis)))
print(count)

"
8580366,ALDS1_2_A,"n = int(input())
numbers = list(map(int, input().split()))

count = 0
flag = 0

while(1):
    flag = 0

    for i in range(n - 1):
        if(numbers[i] > numbers[i + 1]):

            numbers[i], numbers[i + 1] = numbers[i + 1], numbers[i]

            count += 1
            flag = 1

    if(flag == 0):
        break

print(*numbers)
print(count)
"
8589269,ALDS1_2_A,"n = int(input())
a = list(map(int, input().split()))
flag = 1
num = 0
while (flag):
    flag = 0
    for j in reversed(range(1, n)):
        if a[j] < a[j-1]:
            tmp = a[j]
            a[j] = a[j-1]
            a[j-1] = tmp
            num+=1
            flag = 1
print(*a)
print(num)
"
8592667,ALDS1_2_A,"n = int(input())
A = list(map(int, input().split()))
cnt = 0
for i in range(n):
  for j in reversed(range(i+1, n)):
    v = A[j]
    if A[j-1] > v:
      cnt += 1
      A[j] = A[j-1]
      A[j-1] = v
print(*A)
print(cnt)
"
8597299,ALDS1_2_A,"n = int(input())
a = []
cnt = 0
a =list(map(int, input().split()))
for i in range(n-2,-1,-1):
    for j in range(0,i+1):
        if (int(a[j]) > int(a[j+1])):
            tmp = a[j]
            a[j] = a[j+1]
            a[j+1] = tmp
            cnt = cnt + 1
for i in range(n-1):
    print(a[i],end="" "")
print(a[n-1])
print (cnt)
"
8611538,ALDS1_2_A,"n = int(input())
al = list(map(int, input().split()))

def bubble_sort(al, n):
    cnt = 0
    flag = 1
    while flag:
        flag = 0
        for j in range(n - 1, 0, -1):
            if al[j] < al[j - 1]:
                al[j], al[j - 1] = al[j - 1], al[j]
                cnt += 1
                flag = 1
    return al, cnt

al, cnt = bubble_sort(al, n)
print(*al)
print(cnt)

"
8617384,ALDS1_2_A,"def bubbleSort(A, N):
    flg = 1
    change = 0
    while flg == 1:
        flg = 0
        for j in reversed(range(1 ,N)):
            if A[j] < A[j-1]:
                tmp = A[j]
                A[j] = A[j-1]
                A[j-1] = tmp
                flg = 1
                change += 1
    return {
        ""arr"" : A, 
        ""excahnge"" : change,
    }

n = int(input())
a =  [int(i) for i in input().split(' ')]

ans = bubbleSort(a, n)
print (' '.join([str(i) for i in ans['arr']]))
print(ans['excahnge'])
"
8617506,ALDS1_2_A,"N = int(input())
A = [*map(int,input().split())]

na = 0
for i in range(N-1):
    for j in range(N-1, i, -1):
        if A[j-1] > A[j] :
            A[j], A[j-1] = A[j-1], A[j]
            na += 1

print(*A)
print(na)
"
8622460,ALDS1_2_A,"#読み込み
n = int(input())
lis = list(map(int, input().split()))

#Sort
swap_count = 0
for i in range(n-1):
    for j in range(n-1,i,-1):
        if lis[j] < lis[j-1]:
            lis[j-1], lis[j] = lis[j], lis[j-1]
            swap_count += 1

#出力
print("" "".join(map(str,lis)))
print(swap_count)

"
8629090,ALDS1_2_A,"def PrintFormat(A:list[int]):
    print(A[0], end="""")
    for i in range(1,len(A)):
        print("" ""+str(A[i]),end="""")
    print()

def BubbleSort(A:list[int]):
    count = 0
    N = len(A)
    for i in range(0,N):
        for j in range(N-1,i,-1):
            if A[j] < A[j-1]:
                A[j], A[j-1] = A[j-1], A[j]
                count += 1
    PrintFormat(A)
    print(count)

Length = input()
Array = input()
a = list(map(int,Array.split()))
BubbleSort(a)
"
8631086,ALDS1_2_A,"def bubble_sort(arr):
    n = len(arr)
    count = 0
    for i in range(n):
        swapped = False
        for j in range(0, n-i-1):
            if arr[j] > arr[j+1]:
                arr[j], arr[j+1] = arr[j+1], arr[j]
                count += 1
                swapped = True
        if not swapped:
            break
    return arr, count
input_NUM = list(map(int, input().split()))
input_array = list(map(int, input().split()))

sorted_array, swaps = bubble_sort(input_array)
print("" "".join(map(str, sorted_array)))
print(swaps)


"
8645652,ALDS1_2_A,"N = int(input())
l = list(map(int, input().split()))
c = 0
for i in range(N):
    j = len(l) - 1
    while j >= i + 1:
        if l[j] < l[j - 1]:
            l[j], l[j - 1] = l[j - 1], l[j]
            c += 1
        j -= 1
print("" "".join(map(str, l)))
print(c)
"
8667209,ALDS1_2_A,"n = int(input())
a = list(map(int,input().split()))
count = 0

flag = 1

while flag:
    flag = 0
    for i in reversed(range(1,n)):
        if a[i] < a[i - 1]:
            a[i],a[i - 1] = a[i - 1],a[i]
            count += 1
            flag = 1
print(*a)
print(count)
"
8674949,ALDS1_2_A,"n = int(input())
arr = list(map(int, input().split()))
count = 0

for i in range(len(arr)-1):
    for j in range(len(arr)-1, i, -1):
        if arr[j] < arr[j-1]:
            arr[j], arr[j-1] = arr[j-1], arr[j]
            count += 1
            
print(*arr)
print(count)
"
8685247,ALDS1_2_A,"N = int(input())
A = list(map(int, input().split()))
flag = 1
count = 0
while flag:
    flag = 0
    for j in range(N-1,0,-1):
        if A[j] < A[j-1]:
            A[j],A[j-1] = A[j-1],A[j]
            flag = 1
            count += 1
print(*A)
print(count)
"
8689093,ALDS1_2_A,"import sys

N = int(input())

A = list(map(int,input().split()))

ans = 0
for i in range(len(A)-1,0,-1):
    k = 0
    while k < i:
        if A[k] > A[k+1]:
            tmp = A[k]
            A[k] = A[k+1]
            A[k+1] = tmp
            ans += 1
        k += 1

print(' '.join(map(str,A)))
print(ans)


"
8689523,ALDS1_2_A,"n = int(input())
a = list(map(int,input().split()))
count = 0
flag = True
while flag:
    flag = False
    for j in range(n-1,0,-1):
        if a[j] < a[j-1]:
            a[j],a[j-1] = a[j-1],a[j]
            count += 1
            flag = True

print(*a)
print(count)

"
8702709,ALDS1_2_A,"N = int(input())
A = list(map(int,input().split()))


count = 0

def buble_sort(A,N,count):
  for i in range(len(A)):
    for j in range(len(A)-i-1):
      if A[j] > A[j+1]:
        A[j], A[j+1] = A[j+1], A[j]
        count = count + 1
  
  return count


count = buble_sort(A,N,count)

output = ' '.join(str(x) for x in A)
print(output)
print(count)
  

"
8709215,ALDS1_2_A,"n = int(input())
a = list(map(int, input().split()))

cnt = 0

is_sorted = False
while not is_sorted:
    is_sorted = True
    for i in range(len(a) - 1):
        if a[i] > a[i + 1]:
            a[i], a[i + 1] = a[i + 1], a[i]
            is_sorted = False
            cnt += 1

print(*a)
print(cnt)
"
8733244,ALDS1_2_A,"def bubble_sort(list):
    flag = True
    count_swap = 0
    while flag:
        flag = False
        for j in range(len(list)-1, 0, -1):
            if list[j] < list[j-1]:
                list[j], list[j-1] = list[j-1], list[j]
                count_swap += 1
                flag = True
    return list, count_swap

length = int(input())
array = list(map(int, input().split()))
sorted_array, swap_count = bubble_sort(array)
print(*sorted_array)
print(swap_count)
"
8743893,ALDS1_2_A,"# aizu_ ALDS1_2_A_BubbleSort.py  バブルソート

N = int(input())
A = list(map(int,input().split()))

def bubblesort(A,N):
    flag = 1
    cnt = 0
    while flag:
        flag = 0
        for j in range(N-1,0,-1):
            if A[j] < A[j-1]:
                cnt += 1
                A[j],A[j-1] = A[j-1],A[j]
                flag = 1
    return A,cnt

result,cnt = bubblesort(A,N) 
print(*result)
print( cnt )

"
